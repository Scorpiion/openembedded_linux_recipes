From 65715994b450d328e69167c14d83d8b422063b56 Mon Sep 17 00:00:00 2001
From: Matthieu Crapet <mcrapet@gmail.com>
Date: Sat, 19 Jun 2010 11:45:39 +0200
Subject: [PATCH 10/24] ts72xx_gpio_i2c
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Petr Å tetiar <ynezz@true.cz>
---
 arch/arm/mach-ep93xx/Kconfig  |   21 +++++++++++++++++++++
 arch/arm/mach-ep93xx/ts72xx.c |   35 ++++++++++++++++++++++++++++++++++-
 2 files changed, 55 insertions(+), 1 deletions(-)

diff --git a/arch/arm/mach-ep93xx/Kconfig b/arch/arm/mach-ep93xx/Kconfig
index bd463a0..4f1d32d 100644
--- a/arch/arm/mach-ep93xx/Kconfig
+++ b/arch/arm/mach-ep93xx/Kconfig
@@ -212,6 +212,27 @@ config MACH_TS72XX_FORCE_MACHINEID
 	  Say 'Y' here to force Machine ID to 0x2A1 (MACH_TYPE_TS72XX legacy value)
 	  In early days Technologic Systems fixed the 0x163 value in redboot.
 
+config MACH_TS72XX_SBCINFO
+	tristate "Add procfs /proc/driver/sbcinfo"
+	depends on MACH_TS72XX
+	help
+	  Say 'Y' to add a procfs entry containing some information
+	  related to Technologic Systems TS-72xx SBC.
+
+config MACH_TS72XX_GPIO_KEYS
+	bool "Enable GPIO keys"
+	depends on MACH_TS72XX
+	help
+	  Say 'Y' here to enable GPIO keys on DIO connector.
+	  Current config is KEY_UP for DIO_1 and KEY_DOWN for DIO_2.
+
+config MACH_TS72XX_GPIO_I2C
+	bool "Enable I2C over GPIO "
+	depends on MACH_TS72XX
+	help
+	  Say 'Y' here to enable I2C over GPIO on DIO connector.
+	  Default configuration is pin DIO_6=sda, DIO_7=scl, 100 kHz.
+
 endmenu
 
 endif
diff --git a/arch/arm/mach-ep93xx/ts72xx.c b/arch/arm/mach-ep93xx/ts72xx.c
index a23a184..6eeb2c0 100644
--- a/arch/arm/mach-ep93xx/ts72xx.c
+++ b/arch/arm/mach-ep93xx/ts72xx.c
@@ -19,7 +19,17 @@
 #include <linux/m48t86.h>
 #include <linux/mtd/nand.h>
 #include <linux/mtd/partitions.h>
-
+#include <linux/mtd/physmap.h>
+#include <linux/gpio.h>
+#include <linux/gpio_keys.h>
+#if defined(CONFIG_MACH_TS72XX_GPIO_I2C)
+#include <linux/i2c.h>
+#include <linux/i2c-gpio.h>
+#endif
+#include <linux/mtd/nand.h>
+#include <linux/mtd/partitions.h>
+#include <linux/spi/spi.h>
+#include <linux/input.h>
 #include <mach/hardware.h>
 #include <mach/ts72xx.h>
 
@@ -279,6 +289,23 @@ static struct ep93xx_eth_data __initdata ts72xx_eth_data = {
 	.phy_id		= 1,
 };
 
+/*************************************************************************
+ * I2C (make access through TS-72XX "DIO" 2x8 header)
+ *************************************************************************/
+#if defined(CONFIG_MACH_TS72XX_GPIO_I2C)
+static struct i2c_gpio_platform_data ts72xx_i2c_gpio_data = {
+	.sda_pin		= EP93XX_GPIO_LINE_EGPIO14, // DIO_6
+	.sda_is_open_drain	= 0,
+	.scl_pin		= EP93XX_GPIO_LINE_EGPIO15, // DIO_7
+	.scl_is_open_drain	= 0,
+	.udelay			= 0,	/* default is 100 kHz */
+	.timeout		= 0,	/* default is 100 ms */
+};
+
+static struct i2c_board_info __initdata ts72xx_i2c_board_info[] = {
+};
+#endif
+
 static void __init ts72xx_init_machine(void)
 {
 	ep93xx_init_devices();
@@ -288,6 +315,12 @@ static void __init ts72xx_init_machine(void)
 
 	ep93xx_register_eth(&ts72xx_eth_data, 1);
 
+#if defined(CONFIG_MACH_TS72XX_GPIO_I2C)
+	ep93xx_register_i2c(&ts72xx_i2c_gpio_data,
+			ts72xx_i2c_board_info,
+			ARRAY_SIZE(ts72xx_i2c_board_info));
+#endif
+
 	/* PWM1 is DIO_6 on TS-72xx header */
 	ep93xx_register_pwm(0, 1);
 }
-- 
1.7.1

